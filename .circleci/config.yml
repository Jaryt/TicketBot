version: 2.1

orbs:
    python: circleci/python@0.2.1
    aws-s3: circleci/aws-s3@1.0.15

commands:
    collect-tickets:
        parameters:
          view:
            type: string
          channel:
            type: string
            default: "$SLACK_CHANNEL"
          timezone:
            type: boolean
            default: true
          ping:
            type: boolean
            default: true
          layover:
            type: integer
            default: 0
          store:
            type: string
            default: "store.json"
          is_manager: 
            type: boolean
            default: false
          group_id: 
            type: integer
            default: 0
          notify_after_days: 
            type: integer
            default: 0
        steps:
          - python/load-cache
          - python/install-deps
          - aws-s3/copy:
              from: 's3://circleticketbot/<< parameters.store >>'
              to: ../<< parameters.store >>
          - run: 
              command: python3 python/bot.py $ZENDESK_LOGIN $ZENDESK_URL << parameters.view >> << parameters.channel >> << parameters.timezone >> << parameters.ping >> << parameters.layover >> << parameters.store >> << parameters.is_manager >> << parameters.group_id >> << parameters.notify_after_days >>
              name: "Run Ticket Collection"
          - aws-s3/copy:
              from: ../<< parameters.store >>
              to: 's3://circleticketbot'
          - python/save-cache
jobs:
    all:
      executor: python/default
      steps:
        - checkout
        - collect-tickets:
              view: "$VIEW_ID_CLOUD"
              ping: false
              timezone: false
    support:
        executor: python/default
        steps:
          - checkout
          - collect-tickets:
                view: "$VIEW_ID_CLOUD"
    dce:
        executor: python/default
        steps:
          - checkout
          - collect-tickets:
              view: "$VIEW_ID_PREMIUM"
              layover: 5
              store: "store_dce.json"
    support_manager:
        executor: python/default
        steps:
          - checkout
          - collect-tickets:
              view: "$VIEW_ID_CLOUD"
              channel: "US57UDJJY"
              timezone: false
              is_manager: true
              group_id: 43783767
              notify_after_days: 0
    dce_manager:
        executor: python/default
        steps:
          - checkout
          - collect-tickets:
              view: "$VIEW_ID_PREMIUM"
              channel: "US57UDJJY"
              layover: 5
              timezone: false
              store: "store_dce.json"
              is_manager: true
              group_id: 43783767
              notify_after_days: 0

workflows:
    version: 2

    default:
      jobs:
        - support_manager
    daily:
        triggers:
            - schedule:
                cron: "0 0,3,6,9,12,15,18,21 * * *"
                filters:
                    branches:
                        only:
                          - master
        jobs: 
          - support
          - dce
